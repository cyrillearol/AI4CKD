Je participe √† un projet de hackathon dans le cadre du programme AI4CKD, destin√© √† concevoir un prototype web fonctionnel pour la gestion des patients atteints de Maladie R√©nale Chronique (MRC). Ce prototype est r√©alis√© par des √©tudiants de Licence 3 en G√©nie Logiciel √† l‚ÄôIFRI (Universit√© d‚ÄôAbomey-Calavi). Je dois d√©velopper une application web ergonomique, √©volutive et s√©curis√©e, centr√©e autour deux modules critiques destin√©s √† un usage m√©dical professionnel.

Voici exactement ce qu‚Äôon attend de moi :

‚úÖ 1. Fonctionnalit√© 1 ‚Äì Syst√®me intelligent d‚Äôalerte automatique
D√©velopper un module de d√©tection automatique de situations cliniques critiques √† partir des donn√©es saisies lors des consultations. Il doit :

D√©tecter automatiquement les valeurs cliniques anormales (ex. : cr√©atinine, tension art√©rielle, perte de poids).

D√©clencher une alerte dynamique en temps r√©el apr√®s chaque enregistrement de consultation.

Afficher visuellement les alertes (badge color√©, ic√¥ne, message clair).

Les r√®gles d‚Äôalerte doivent √™tre cod√©es avec des seuils d√©finis et si possible personnalisables par patient.

‚úÖ 2. Fonctionnalit√© 2 ‚Äì G√©n√©ration automatique de PDF patient
Mettre en place un syst√®me d‚Äôexport PDF du dossier m√©dical d‚Äôun patient. Ce fichier doit :

√ätre structur√© et lisible, pr√™t √† √™tre utilis√© dans un contexte m√©dical.

Contenir :

Identit√© du patient

Ant√©c√©dents

Liste des consultations

Donn√©es cliniques cl√©s

R√©sum√© des alertes d√©clench√©es

√ätre g√©n√©rable √† tout moment depuis l‚Äôinterface web.

Bien s‚Äôint√©grer aux donn√©es existantes de l‚Äôapplication (consultations, patients, alertes‚Ä¶).

üõ†Ô∏è Contraintes techniques (√† respecter ou justifier)
Technologies recommand√©es :

Frontend : React.js ou Next.js

Backend : Node.js + Express ou FastAPI

Base de donn√©es : MongoDB ou PostgreSQL

Fonctionnalit√©s facultatives mais valoris√©es :

Module d‚Äôauthentification s√©curis√©

Autres contraintes :

Code versionn√© sur GitHub avec un README structur√©

H√©bergement public sur une plateforme (Vercel, Render‚Ä¶)

Justification claire des choix techniques

üì¶ Livrables √† remettre obligatoirement
Prototype h√©berg√© en ligne (lien fonctionnel)

D√©p√¥t GitHub complet, propre et bien comment√©

Vid√©o d√©mo (2 √† 4 minutes) montrant les deux modules en action

Pr√©sentation synth√©tique (slides ou document) pour le jury

‚è±Ô∏è D√©lais
D√©but du projet : 28 juillet

Fin de r√©alisation : 29 juillet

Pr√©sentation finale : 30 juillet

üìä Crit√®res d‚Äô√©valuation
Pertinence fonctionnelle et technique des deux modules

Robustesse et fiabilit√© de l‚Äôimpl√©mentation

Qualit√© UX/UI (navigation, clart√©, acc√®s rapide aux alertes)

Justification technique des choix et d√©fense du travail

Compl√©tude et respect des livrables et d√©lais